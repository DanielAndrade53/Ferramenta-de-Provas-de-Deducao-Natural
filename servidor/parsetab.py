
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARROW CONJ DISJ ID LPAREN NOT RPARENProgram : ExpressionListExpressionList : ExpressionList : ExpressionExpressionList : Expression ExpressionListExpression : IDExpression : Expression BinaryOp ExpressionBinaryOp : ARROW'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,8,],[-2,0,-1,-2,-5,-4,-6,]),'ID':([0,3,4,6,7,8,],[4,4,-5,4,-7,-6,]),'ARROW':([3,4,8,],[7,-5,7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Program':([0,],[1,]),'ExpressionList':([0,3,],[2,5,]),'Expression':([0,3,6,],[3,3,8,]),'BinaryOp':([3,8,],[6,6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> ExpressionList','Program',1,'p_Program_1','grammar.py',19),
  ('ExpressionList -> <empty>','ExpressionList',0,'p_ExpressionsList_1','grammar.py',23),
  ('ExpressionList -> Expression','ExpressionList',1,'p_ExpressionsList_2','grammar.py',27),
  ('ExpressionList -> Expression ExpressionList','ExpressionList',2,'p_ExpressionList','grammar.py',31),
  ('Expression -> ID','Expression',1,'p_Expression_1','grammar.py',35),
  ('Expression -> Expression BinaryOp Expression','Expression',3,'p_Expression_2','grammar.py',39),
  ('BinaryOp -> ARROW','BinaryOp',1,'p_BinaryOp','grammar.py',43),
]
